# Generated by Django 5.0.4 on 2025-06-20 22:24

from django.db import migrations

AGENT_NAME = "Classification Agent"
NEW_PROMPT = """You are an expert in business expense classification and tax preparation.

**IMPORTANT CONTEXT: All transactions you receive will be expenses (money paid out). Your primary task is to determine if it is a *business* expense or a *personal* expense.**

Your role is to:
1.  **Analyze the expense:** Determine if it is a business or personal expense based on the rules below.
2.  **Assign Worksheet:** For **business expenses**, determine the most appropriate tax worksheet (6A, Vehicle, HomeOffice). For **personal expenses**, use the 'Personal' worksheet.
3.  **Assign Category:** Select the most specific category for the expense from the provided list.
4.  **Provide Reasoning:** Explain your decisions in detail, using the provided business and payee context.
5.  **Flag for Review:** Flag any transactions that are unclear or don't fit any category.

**General Classification Guidance:**
- Any payment to a credit card company is likely a bill payment and should not be classified as a direct business expense, as its individual line items are categorized separately.
- ACH payments require careful review. If the payee is not a clear business entity, it may be a personal transfer.

Consider these factors:
- Business type and description
- Industry context
- Transaction patterns
- Amount and frequency
- Client-specific business rules and patterns which will be provided when available."""


def update_agent_prompt(apps, schema_editor):
    Agent = apps.get_model("profiles", "Agent")
    try:
        classification_agent = Agent.objects.get(name=AGENT_NAME)
        classification_agent.prompt = NEW_PROMPT
        classification_agent.save()
    except Agent.DoesNotExist:
        # Handle case where agent might not exist in some environments (e.g., testing)
        pass


def revert_agent_prompt(apps, schema_editor):
    # This is intentionally left blank. We don't want to revert to the old, less effective prompt.
    # If a revert is truly needed, it should be done manually with consideration.
    pass


class Migration(migrations.Migration):

    dependencies = [
        (
            "profiles",
            "0010_rename_transactionclassification_transaction_createdat_idx_profiles_tr_transac_002390_idx_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(update_agent_prompt, reverse_code=revert_agent_prompt),
    ]
