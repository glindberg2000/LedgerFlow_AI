version: '3.9'

name: ledger-prod

services:
  django:
    image: ledgerflow:${TAG:-latest}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9002:8000"
    env_file:
      - .env.prod
    restart: on-failure
    volumes:
      - ./media:/app/media
      - ./static:/app/static
    environment:
      - DEBUG=0
      - POSTGRES_DB=prod_db
      - POSTGRES_USER=ledgerflow
      - POSTGRES_PASSWORD=ledgerflow
      - DJANGO_SETTINGS_MODULE=ledgerflow.settings
    command: gunicorn ledgerflow.wsgi:application --bind 0.0.0.0:8000

  postgres:
    image: postgres:17.4
    env_file:
      - .env.prod
    volumes:
      - ledgerflow_postgres_data:/var/lib/postgresql/data:delegated
      - ./backups/test:/backups/test
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    restart: unless-stopped

  backup:
    image: postgres:17.4
    volumes:
      - ledgerflow_postgres_data:/var/lib/postgresql/data:ro
      - /Users/greg/Library/Mobile Documents/com~apple~CloudDocs/repos/LedgerFlow_Archive/backups:/icloud_backups
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    entrypoint: |
      bash -c 'while true; do
        pg_dump -h postgres -U $$POSTGRES_USER -d $$POSTGRES_DB -Fc --clean \
          > /icloud_backups/prod_$$(date +%F_%H-%M).dump;
        sleep 86400;
      done'
    depends_on:
      - postgres

volumes:
  ledgerflow_postgres_data:
    name: ledgerflow_postgres_data_prod 

networks:
  default:
    name: ledger-prod 